import java.util.ArrayList;
import java.util.Scanner;

class Contact {
    String name;
    String phone;
    String email;

    Contact(String name, String phone, String email) {
        this.name = name;
        this.phone = phone;
        this.email = email;
    }

    void display() {
        System.out.println("Name: " + name + ", Phone: " + phone + ", Email: " + email);
    }
}

public class ContactManager {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Contact> contacts = new ArrayList<>();
        boolean running = true;

        while (running) {
            System.out.println("\n--- Contact Management ---");
            System.out.println("1. Add Contact\n2. View Contacts\n3. Update Contact\n4. Delete Contact\n5. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter phone: ");
                    String phone = sc.nextLine();
                    System.out.print("Enter email: ");
                    String email = sc.nextLine();
                    contacts.add(new Contact(name, phone, email));
                    System.out.println("Contact added.");
                    break;
                case 2:
                    if (contacts.isEmpty()) {
                        System.out.println("No contacts found.");
                    } else {
                        for (int i = 0; i < contacts.size(); i++) {
                            System.out.print((i + 1) + ". ");
                            contacts.get(i).display();
                        }
                    }
                    break;
                case 3:
                    System.out.print("Enter contact number to update: ");
                    int updateIndex = sc.nextInt() - 1;
                    sc.nextLine(); // consume newline
                    if (updateIndex >= 0 && updateIndex < contacts.size()) {
                        System.out.print("Enter new name: ");
                        name = sc.nextLine();
                        System.out.print("Enter new phone: ");
                        phone = sc.nextLine();
                        System.out.print("Enter new email: ");
                        email = sc.nextLine();
                        contacts.set(updateIndex, new Contact(name, phone, email));
                        System.out.println("Contact updated.");
                    } else {
                        System.out.println("Invalid contact number.");
                    }
                    break;
                case 4:
                    System.out.print("Enter contact number to delete: ");
                    int deleteIndex = sc.nextInt() - 1;
                    if (deleteIndex >= 0 && deleteIndex < contacts.size()) {
                        contacts.remove(deleteIndex);
                        System.out.println("Contact deleted.");
                    } else {
                        System.out.println("Invalid contact number.");
                    }
                    break;
                case 5:
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        }
        sc.close();
    }
}
_import java.util.ArrayList;
import java.util.Scanner;

class Contact {
    String name;
    String phone;
    String email;

    Contact(String name, String phone, String email) {
        this.name = name;
        this.phone = phone;
        this.email = email;
    }

    void display() {
        System.out.println("Name: " + name + ", Phone: " + phone + ", Email: " + email);
    }
}

public class ContactManager {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Contact> contacts = new ArrayList<>();
        boolean running = true;

        while (running) {
            System.out.println("\n--- Contact Management ---");
            System.out.println("1. Add Contact\n2. View Contacts\n3. Update Contact\n4. Delete Contact\n5. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter phone: ");
                    String phone = sc.nextLine();
                    System.out.print("Enter email: ");
                    String email = sc.nextLine();
                    contacts.add(new Contact(name, phone, email));
                    System.out.println("Contact added.");
                    break;
                case 2:
                    if (contacts.isEmpty()) {
                        System.out.println("No contacts found.");
                    } else {
                        for (int i = 0; i < contacts.size(); i++) {
                            System.out.print((i + 1) + ". ");
                            contacts.get(i).display();
                        }
                    }
                    break;
                case 3:
                    System.out.print("Enter contact number to update: ");
                    int updateIndex = sc.nextInt() - 1;
                    sc.nextLine(); // consume newline
                    if (updateIndex >= 0 && updateIndex < contacts.size()) {
                        System.out.print("Enter new name: ");
                        name = sc.nextLine();
                        System.out.print("Enter new phone: ");
                        phone = sc.nextLine();
                        System.out.print("Enter new email: ");
                        email = sc.nextLine();
                        contacts.set(updateIndex, new Contact(name, phone, email));
                        System.out.println("Contact updated.");
                    } else {
                        System.out.println("Invalid contact number.");
                    }
                    break;
                case 4:
                    System.out.print("Enter contact number to delete: ");
                    int deleteIndex = sc.nextInt() - 1;
                    if (deleteIndex >= 0 && deleteIndex < contacts.size()) {
                        contacts.remove(deleteIndex);
                        System.out.println("Contact deleted.");
                    } else {
                        System.out.println("Invalid contact number.");
                    }
                    break;
                case 5:
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        }
        sc.close();
    }
}
